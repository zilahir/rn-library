name: Backend Test
on:
  workflow_dispatch:

jobs:
  run-jest-tests:
    name: "Running Jest tests"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./apps/server
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: aws-actions/configure-aws-credentials@v2
        name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Run tests
        run: pnpm run test:cov

      - name: "Get AWS CDK output values"
        working-directory: ./packages/cdk
        run: mkdir -p ./output && pnpm run init:stack:static:codecov

      - name: Get AWS CDK Values
        id: set-matrix
        working-directory: ./packages/cdk
        run: |
          PARSED_JSON=$(jq -c -r '.["backend-codecov-static"]' ./output/codecov-static.json)
          echo "matrix=$PARSED_JSON" >> "$GITHUB_OUTPUT"

      - name: "Copy Artifacts To S3"
        id: "upload-s3"
        env:
          MATRIX: ${{ steps.set-matrix.outputs.matrix }}
        working-directory: ./apps/server
        run: |
          aws s3 sync ./coverage s3://${{fromJson(steps.set-matrix.outputs.MATRIX).staticbucketurlbackendcodecovstatic}}/
          aws cloudfront create-invalidation --distribution-id ${{fromJson(steps.set-matrix.outputs.MATRIX).staticdistroidbackendcodecovstatic}} --paths "/"
