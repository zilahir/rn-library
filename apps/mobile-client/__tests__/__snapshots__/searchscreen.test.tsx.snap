// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearhScreen renders correctly 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "backgroundColor": "#fff",
        "borderBottomLeftRadius": 25,
        "borderBottomRightRadius": 25,
        "flex": 1,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "transparent",
          "flex": 1,
          "marginHorizontal": 24,
          "marginVertical": 16,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "marginTop": 48,
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "marginBottom": 16,
            "opacity": 1,
          }
        }
        testID="search-bar"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "rgba(247, 247, 247, 1)",
                "borderRadius": 10,
                "display": "flex",
                "flexDirection": "row",
                "height": 40,
                "paddingHorizontal": 8,
              },
            ]
          }
        >
          <Text />
          <TextInput
            editable={false}
            onChangeText={[Function]}
            placeholder="Search"
            placeholderTextColor="rgba(247, 247, 247, 1)"
            style={
              [
                {
                  "color": "#828282",
                  "flex": 1,
                  "fontSize": 14,
                  "paddingLeft": 10,
                },
              ]
            }
            testID="text-input"
            value=""
          />
        </View>
      </View>
    </View>
    <View>
      <View
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
            },
          ]
        }
      >
        <Text />
        <View>
          <Text
            style={
              [
                {
                  "color": "#333333",
                  "fontSize": 22,
                  "fontWeight": 500,
                },
                [
                  undefined,
                ],
              ]
            }
          >
            searchScreen.suggestions
          </Text>
        </View>
      </View>
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        collapsable={false}
        contentContainerStyle={
          [
            {
              "marginTop": 16,
            },
          ]
        }
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        handlerTag={1}
        handlerType="NativeViewGestureHandler"
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        renderScrollComponent={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
        waitFor={
          [
            {
              "current": null,
            },
            {
              "current": null,
            },
          ]
        }
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;
